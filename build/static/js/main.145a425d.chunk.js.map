{"version":3,"sources":["Components/Games/GamesPage.js","redux/actions/SearchActions.js","redux/actions/UserGamesActions.js","Components/shared/categories.js","Components/Random/RandomPage.js","Components/Search/SearchPage.js","Components/shared/states.js","Components/Signup/SignupPage.js","Components/Login/LoginPage.js","redux/actions/LoginActions.js","Components/UserGames/UserGames..js","redux/selectors/UserSelectors.js","App.js","redux/reducers/LoginReducer.js","redux/reducers/SearchReducer.js","redux/reducers/UserGamesReducer.js","redux/reducers/index.js","redux/Store.js","reportWebVitals.js","index.js"],"names":["GamesPage","games","isFavorite","addFavorite","deleteFavorite","className","name","src","image","desciption","onClick","id","SET_SEARCH","ADD_FAVORITE","DETLETE_FAVORITE","type","categoriesSelect","RandomPage","props","useState","search","setSearch","setError","randomGame","error","a","fetch","response","json","resGames","image_url","useEffect","from","opacity","to","config","delay","duration","style","mapDispatchToProps","favorite","connect","state","username","user","favorites","categories","setCategories","minPlayer","setMinPlayer","maxMsrp","setMaxMsrp","limit","setLimit","orderBy","setOrderBy","favIds","useMemo","map","url","val","description_preview","htmlFor","onChange","e","target","value","preventDefault","getGames","length","includes","stateSelect","SignupPage","setUsername","password","setPassword","firstname","setFirstname","lastname","setLastname","city","setCity","setState","visible","setVisible","history","useHistory","toast","warning","method","headers","body","JSON","stringify","setUser","data","push","abbreviation","signup","href","LoginPage","login","SET_USER","CLEAR_USER","clearUser","v","usernameSelector","App","useSelectors","useActionCreators","setUserInState","axios","get","console","log","success","exact","path","component","SearchPage","UserGames","initialState","rootReducer","combineReducers","action","filter","createStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","Store","document","getElementById"],"mappings":"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","file":"static/js/main.145a425d.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport \"./GamesPage.css\";\r\n// import {deleteFavorite} from '../../redux/actions/UserGamesActions';\r\n\r\n\r\n//Need to add buttons for adding or deleting favorites in \r\n//Add{} inside the () because of object destructuing. it thought of it as a single object with only () instead of individual objects ({})\r\nconst GamesPage = ({games, isFavorite, addFavorite, deleteFavorite}) => {   \r\n  return (\r\n    <div className=\"gamesContainer\">\r\n      <h3>{games.name}</h3>\r\n      <img className=\"imgSize\" src={games.image} />\r\n      <p className=\"textLeft\">{games.desciption}</p>\r\n      {!isFavorite && (\r\n        <button className=\"favorite\" onClick={() => addFavorite(games)}>\r\n          {\" \"}\r\n          Add to My Games\r\n        </button>\r\n      )}\r\n      {isFavorite && (\r\n        <button className=\"favorite\" onClick={() => deleteFavorite(games.id)}>\r\n          {\" \"}\r\n          Remove from My Games\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state){\r\n  return {};\r\n}\r\nexport default GamesPage;","/////////////////////////////////////////////////////////////////////////////\r\n// ACTIONS ARE THE MESSENGER                                               //\r\n// HERE'S WHAT YOU NEED TO DO AND HERE'S THE INFORMATION YOU NEED TO DO IT //\r\n/////////////////////////////////////////////////////////////////////////////\r\n\r\n// What actions do I need for my search?\r\n    \r\n// Set the query (export it)\r\nexport const SET_SEARCH = \"Set SEARCH\";\r\n\r\n// Build action creators functions\r\n    // Need to know the searched term so it's passed\r\n    // Functions are used in the components\r\nexport function setSearch(search){\r\n    return {type: SET_SEARCH, search: search};\r\n}\r\n\r\n// There could be a clear search here if functionality is needed...","/////////////////////////////////////////////////////////////////////////////\r\n// ACTIONS ARE THE MESSENGER                                               //\r\n// HERE'S WHAT YOU NEED TO DO AND HERE'S THE INFORMATION YOU NEED TO DO IT //\r\n/////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n// What actions do I need for my favorites?\r\n    // Add  (export it)\r\n    // Delete (export it)\r\n    export const ADD_FAVORITE = \"Set Favorite\";\r\n    export const DETLETE_FAVORITE = \"Delete Favorite\";\r\n\r\n\r\n// Build action creators functions\r\n    // Need to know the favorite itself so it's passed\r\n    // Functions are used in the components\r\n    export function addFavorite(favorite){\r\n        return {type: ADD_FAVORITE, favorite: favorite};\r\n    }\r\n\r\n// Build action creators functions\r\n    // Need to know the id of the deleted favorite so it's passed\r\n    // Functions are used in the components\r\n    export function deleteFavorite(id){\r\n        return {type: DETLETE_FAVORITE, id: id};\r\n    }\r\n\r\n// dispatchEvent({type: \"Add Favorite\", favorite {id: 1, title: \"hello\"})\r\n// addFavorite({id: 1, title: \"hello\"})","export const categoriesSelect = [\r\n            {\r\n                \"id\": \"2bdFPJUvFo\",\r\n                \"name\": \"18XX\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/2bdFPJUvFo/18xx\"\r\n            },\r\n            {\r\n                \"id\": \"85OKv8p5Ow\",\r\n                \"name\": \"4x\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/85OKv8p5Ow/4x\"\r\n            },\r\n            {\r\n                \"id\": \"hBqZ3Ar4RJ\",\r\n                \"name\": \"Abstract\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/hBqZ3Ar4RJ/abstract\"\r\n            },\r\n            {\r\n                \"id\": \"KUBCKBkGxV\",\r\n                \"name\": \"Adventure\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/KUBCKBkGxV/adventure\"\r\n            },\r\n            {\r\n                \"id\": \"20iDvpbh7A\",\r\n                \"name\": \"Age of Reason\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/20iDvpbh7A/age-of-reason\"\r\n            },\r\n            {\r\n                \"id\": \"tJxatX2ZbW\",\r\n                \"name\": \"Aliens\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/tJxatX2ZbW/aliens\"\r\n            },\r\n            {\r\n                \"id\": \"nWDac9tQzt\",\r\n                \"name\": \"Alternate History\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/nWDac9tQzt/alternate-history\"\r\n            },\r\n            {\r\n                \"id\": \"dghLhwyxVb\",\r\n                \"name\": \"American History\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/dghLhwyxVb/american-history\"\r\n            },\r\n            {\r\n                \"id\": \"4mOtRRwSoj\",\r\n                \"name\": \"American West\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/4mOtRRwSoj/american-west\"\r\n            },\r\n            {\r\n                \"id\": \"a8NM5cugJX\",\r\n                \"name\": \"Ancient\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/a8NM5cugJX/ancient\"\r\n            },\r\n            {\r\n                \"id\": \"MWoxgHrOJD\",\r\n                \"name\": \"Animals\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/MWoxgHrOJD/animals\"\r\n            },\r\n            {\r\n                \"id\": \"eFaACC6y2c\",\r\n                \"name\": \"Apocalyptic\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/eFaACC6y2c/apocalyptic\"\r\n            },\r\n            {\r\n                \"id\": \"CBboNLI1Uj\",\r\n                \"name\": \"Arabian\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/CBboNLI1Uj/arabian\"\r\n            },\r\n            {\r\n                \"id\": \"k0dglq5j6N\",\r\n                \"name\": \"Art\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/k0dglq5j6N/art\"\r\n            },\r\n            {\r\n                \"id\": \"Bq6M0TJyg7\",\r\n                \"name\": \"Asymmetric\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/Bq6M0TJyg7/asymmetric\"\r\n            },\r\n            {\r\n                \"id\": \"QB4sEpx1Uu\",\r\n                \"name\": \"Aviation\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/QB4sEpx1Uu/aviation\"\r\n            },\r\n            {\r\n                \"id\": \"wpItJuRDiz\",\r\n                \"name\": \"Banking\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/wpItJuRDiz/banking\"\r\n            },\r\n            {\r\n                \"id\": \"PinhJrhnxU\",\r\n                \"name\": \"Bluffing\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/PinhJrhnxU/bluffing\"\r\n            },\r\n            {\r\n                \"id\": \"fW5vusE96B\",\r\n                \"name\": \"Campaign\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/fW5vusE96B/campaign\"\r\n            },\r\n            {\r\n                \"id\": \"eX8uuNlQkQ\",\r\n                \"name\": \"Card Game\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/eX8uuNlQkQ/card-game\"\r\n            },\r\n            {\r\n                \"id\": \"HKaYVNIxAJ\",\r\n                \"name\": \"Children's Game\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/HKaYVNIxAJ/childrens-game\"\r\n            },\r\n            {\r\n                \"id\": \"36WFElclV3\",\r\n                \"name\": \"Christian\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/36WFElclV3/christian\"\r\n            },\r\n            {\r\n                \"id\": \"ODWOjWAJj3\",\r\n                \"name\": \"City Building\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/ODWOjWAJj3/city-building\"\r\n            },\r\n            {\r\n                \"id\": \"w8XD66FUZ2\",\r\n                \"name\": \"Civil War\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/w8XD66FUZ2/civil-war\"\r\n            },\r\n            {\r\n                \"id\": \"329DxyFL9D\",\r\n                \"name\": \"Civilization\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/329DxyFL9D/civilization\"\r\n            },\r\n            {\r\n                \"id\": \"bVMxJo31bS\",\r\n                \"name\": \"Cold war\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/bVMxJo31bS/cold-war\"\r\n            },\r\n            {\r\n                \"id\": \"vXxLT0FDTZ\",\r\n                \"name\": \"Collectible Components\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/vXxLT0FDTZ/collectible-components\"\r\n            },\r\n            {\r\n                \"id\": \"bSzUpE5oOZ\",\r\n                \"name\": \"Colonial\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/bSzUpE5oOZ/colonial\"\r\n            },\r\n            {\r\n                \"id\": \"gscaL52VDG\",\r\n                \"name\": \"Combat\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/gscaL52VDG/combat\"\r\n            },\r\n            {\r\n                \"id\": \"G5kfqnPBP6\",\r\n                \"name\": \"Comic Book / Strip\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/G5kfqnPBP6/comic-book--strip\"\r\n            },\r\n            {\r\n                \"id\": \"ge8pIhEUGE\",\r\n                \"name\": \"Cooperative\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/ge8pIhEUGE/cooperative\"\r\n            },\r\n            {\r\n                \"id\": \"nfQONtMbDU\",\r\n                \"name\": \"Cube Rail\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/nfQONtMbDU/cube-rail\"\r\n            },\r\n            {\r\n                \"id\": \"Ef4oYLHNhI\",\r\n                \"name\": \"Cyberpunk\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/Ef4oYLHNhI/cyberpunk\"\r\n            },\r\n            {\r\n                \"id\": \"bCBXJy9qDw\",\r\n                \"name\": \"Deduction\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/bCBXJy9qDw/deduction\"\r\n            },\r\n            {\r\n                \"id\": \"bKrxqD9mYc\",\r\n                \"name\": \"Dexterity\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/bKrxqD9mYc/dexterity\"\r\n            },\r\n            {\r\n                \"id\": \"mavSOM8vjH\",\r\n                \"name\": \"Dice\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/mavSOM8vjH/dice\"\r\n            },\r\n            {\r\n                \"id\": \"42pmul4oHH\",\r\n                \"name\": \"Dinosaurs\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/42pmul4oHH/dinosaurs\"\r\n            },\r\n            {\r\n                \"id\": \"We3MM46qBr\",\r\n                \"name\": \"Drinking\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/We3MM46qBr/drinking\"\r\n            },\r\n            {\r\n                \"id\": \"g2Hwv8t0Y5\",\r\n                \"name\": \"Dungeon Crawl\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/g2Hwv8t0Y5/dungeon-crawl\"\r\n            },\r\n            {\r\n                \"id\": \"N0TkEGfEsF\",\r\n                \"name\": \"Economic\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/N0TkEGfEsF/economic\"\r\n            },\r\n            {\r\n                \"id\": \"B3NRLMK4xD\",\r\n                \"name\": \"Educational\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/B3NRLMK4xD/educational\"\r\n            },\r\n            {\r\n                \"id\": \"crxgUzJSEz\",\r\n                \"name\": \"Electronic\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/crxgUzJSEz/electronic\"\r\n            },\r\n            {\r\n                \"id\": \"gsekjrPJz0\",\r\n                \"name\": \"Environmental\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/gsekjrPJz0/environmental\"\r\n            },\r\n            {\r\n                \"id\": \"u5ZiYctU6T\",\r\n                \"name\": \"Espionage\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/u5ZiYctU6T/espionage\"\r\n            },\r\n            {\r\n                \"id\": \"v4SfYtS2Lr\",\r\n                \"name\": \"Expansion\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/v4SfYtS2Lr/expansion\"\r\n            },\r\n            {\r\n                \"id\": \"yq6hVlbM2R\",\r\n                \"name\": \"Exploration\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/yq6hVlbM2R/exploration\"\r\n            },\r\n            {\r\n                \"id\": \"7rV11PKqME\",\r\n                \"name\": \"Family Game\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/7rV11PKqME/family-game\"\r\n            },\r\n            {\r\n                \"id\": \"ctumBZyj5l\",\r\n                \"name\": \"Fan Made\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/ctumBZyj5l/fan-made\"\r\n            },\r\n            {\r\n                \"id\": \"ZTneo8TaIO\",\r\n                \"name\": \"Fantasy\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/ZTneo8TaIO/fantasy\"\r\n            },\r\n            {\r\n                \"id\": \"Wr8uXcoR9p\",\r\n                \"name\": \"Farming\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/Wr8uXcoR9p/farming\"\r\n            },\r\n            {\r\n                \"id\": \"upXZ8vNfNO\",\r\n                \"name\": \"Fighting\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/upXZ8vNfNO/fighting\"\r\n            },\r\n            {\r\n                \"id\": \"ELg06sncRX\",\r\n                \"name\": \"Finance\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/ELg06sncRX/finance\"\r\n            },\r\n            {\r\n                \"id\": \"YrDuNj8lvr\",\r\n                \"name\": \"Food\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/YrDuNj8lvr/food\"\r\n            },\r\n            {\r\n                \"id\": \"Eyuf8PzjDo\",\r\n                \"name\": \"Gulf War\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/Eyuf8PzjDo/gulf-war\"\r\n            },\r\n            {\r\n                \"id\": \"KzEQIwIub7\",\r\n                \"name\": \"Historic\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/KzEQIwIub7/historic\"\r\n            },\r\n            {\r\n                \"id\": \"cAIkk5aLdQ\",\r\n                \"name\": \"Horror\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/cAIkk5aLdQ/horror\"\r\n            },\r\n            {\r\n                \"id\": \"TYnxiuiI3X\",\r\n                \"name\": \"Humor\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/TYnxiuiI3X/humor\"\r\n            },\r\n            {\r\n                \"id\": \"zqFmdU4Fp2\",\r\n                \"name\": \"Industry/Manufacturing\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/zqFmdU4Fp2/industrymanufacturing\"\r\n            },\r\n            {\r\n                \"id\": \"rrvd68LjOR\",\r\n                \"name\": \"Kickstarter\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/rrvd68LjOR/kickstarter\"\r\n            },\r\n            {\r\n                \"id\": \"3souLOXUqI\",\r\n                \"name\": \"Korean War\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/3souLOXUqI/korean-war\"\r\n            },\r\n            {\r\n                \"id\": \"XeYUw9159M\",\r\n                \"name\": \"Legacy\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/XeYUw9159M/legacy\"\r\n            },\r\n            {\r\n                \"id\": \"pIMmuVYnQp\",\r\n                \"name\": \"Mafia\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/pIMmuVYnQp/mafia\"\r\n            },\r\n            {\r\n                \"id\": \"POlqwScVxD\",\r\n                \"name\": \"Math\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/POlqwScVxD/math\"\r\n            },\r\n            {\r\n                \"id\": \"ZhlfIPxYsw\",\r\n                \"name\": \"Mature / Adult\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/ZhlfIPxYsw/mature--adult\"\r\n            },\r\n            {\r\n                \"id\": \"ruQAhyLfum\",\r\n                \"name\": \"Maze\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/ruQAhyLfum/maze\"\r\n            },\r\n            {\r\n                \"id\": \"AeWXMxbm91\",\r\n                \"name\": \"Medical\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/AeWXMxbm91/medical\"\r\n            },\r\n            {\r\n                \"id\": \"QAYkTHK1Dd\",\r\n                \"name\": \"Medieval\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/QAYkTHK1Dd/medieval\"\r\n            },\r\n            {\r\n                \"id\": \"AujCle9cUq\",\r\n                \"name\": \"Memory\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/AujCle9cUq/memory\"\r\n            },\r\n            {\r\n                \"id\": \"FC6ElKI9tk\",\r\n                \"name\": \"Miniatures\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/FC6ElKI9tk/miniatures\"\r\n            },\r\n            {\r\n                \"id\": \"L6NUwNdblq\",\r\n                \"name\": \"Modern Warfare\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/L6NUwNdblq/modern-warfare\"\r\n            },\r\n            {\r\n                \"id\": \"Sod2YBWMKi\",\r\n                \"name\": \"Movies / TV / Radio theme\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/Sod2YBWMKi/movies--tv--radio-theme\"\r\n            },\r\n            {\r\n                \"id\": \"Kk70K0524Z\",\r\n                \"name\": \"Murder/Mystery\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/Kk70K0524Z/murdermystery\"\r\n            },\r\n            {\r\n                \"id\": \"herNFAxMdz\",\r\n                \"name\": \"Music\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/herNFAxMdz/music\"\r\n            },\r\n            {\r\n                \"id\": \"MHkqIVxwtx\",\r\n                \"name\": \"Mythology\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/MHkqIVxwtx/mythology\"\r\n            },\r\n            {\r\n                \"id\": \"IpcJzp0TVC\",\r\n                \"name\": \"Napoleonic\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/IpcJzp0TVC/napoleonic\"\r\n            },\r\n            {\r\n                \"id\": \"vqZ5XzGWQD\",\r\n                \"name\": \"Nautical\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/vqZ5XzGWQD/nautical\"\r\n            },\r\n            {\r\n                \"id\": \"jZEDOpx07e\",\r\n                \"name\": \"Negotiation\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/jZEDOpx07e/negotiation\"\r\n            },\r\n            {\r\n                \"id\": \"rtslXnT90O\",\r\n                \"name\": \"Ninjas\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/rtslXnT90O/ninjas\"\r\n            },\r\n            {\r\n                \"id\": \"dO9HVl2TW7\",\r\n                \"name\": \"Novel-based\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/dO9HVl2TW7/novelbased\"\r\n            },\r\n            {\r\n                \"id\": \"TCYEfWLB8c\",\r\n                \"name\": \"One vs Many\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/TCYEfWLB8c/one-vs-many\"\r\n            },\r\n            {\r\n                \"id\": \"X8J7RM6dxX\",\r\n                \"name\": \"Party Game\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/X8J7RM6dxX/party-game\"\r\n            },\r\n            {\r\n                \"id\": \"9EIayX6n5a\",\r\n                \"name\": \"Pirates\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/9EIayX6n5a/pirates\"\r\n            },\r\n            {\r\n                \"id\": \"vRbkg1W0AB\",\r\n                \"name\": \"Plants/Gardening\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/vRbkg1W0AB/plants-gardening\"\r\n            },\r\n            {\r\n                \"id\": \"TKQncFVX74\",\r\n                \"name\": \"Political\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/TKQncFVX74/political\"\r\n            },\r\n            {\r\n                \"id\": \"8Z7nWG2kOw\",\r\n                \"name\": \"Post-Apocalyptic\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/8Z7nWG2kOw/postapocalyptic\"\r\n            },\r\n            {\r\n                \"id\": \"5APB1MWk6X\",\r\n                \"name\": \"Post-Napoleonic\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/5APB1MWk6X/postnapoleonic\"\r\n            },\r\n            {\r\n                \"id\": \"YyszHun1HP\",\r\n                \"name\": \"Prehistoric\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/YyszHun1HP/prehistoric\"\r\n            },\r\n            {\r\n                \"id\": \"ov6sEmlkiC\",\r\n                \"name\": \"Print & Play\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/ov6sEmlkiC/print--play\"\r\n            },\r\n            {\r\n                \"id\": \"dAyk5NtNTV\",\r\n                \"name\": \"Prison Escape\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/dAyk5NtNTV/prison-escape\"\r\n            },\r\n            {\r\n                \"id\": \"WVMOS3s2pb\",\r\n                \"name\": \"Puzzle\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/WVMOS3s2pb/puzzle\"\r\n            },\r\n            {\r\n                \"id\": \"2Gu62aKdma\",\r\n                \"name\": \"RPG\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/2Gu62aKdma/rpg\"\r\n            },\r\n            {\r\n                \"id\": \"tQGLgwdbYH\",\r\n                \"name\": \"Racing\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/tQGLgwdbYH/racing\"\r\n            },\r\n            {\r\n                \"id\": \"PzWI2uaif0\",\r\n                \"name\": \"Real-time\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/PzWI2uaif0/realtime\"\r\n            },\r\n            {\r\n                \"id\": \"DRqeVkXWqX\",\r\n                \"name\": \"Religious\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/DRqeVkXWqX/religious\"\r\n            },\r\n            {\r\n                \"id\": \"nuHYRFmMjU\",\r\n                \"name\": \"Renaissance\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/nuHYRFmMjU/renaissance\"\r\n            },\r\n            {\r\n                \"id\": \"zyj9ZK3mHB\",\r\n                \"name\": \"Resource Management\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/zyj9ZK3mHB/resource-management\"\r\n            },\r\n            {\r\n                \"id\": \"oojGpMQQ2l\",\r\n                \"name\": \"Robots\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/oojGpMQQ2l/robots\"\r\n            },\r\n            {\r\n                \"id\": \"KSBdPfxs6F\",\r\n                \"name\": \"Roman Empire\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/KSBdPfxs6F/roman-empire\"\r\n            },\r\n            {\r\n                \"id\": \"E5rYwP0Ybr\",\r\n                \"name\": \"Romance\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/E5rYwP0Ybr/romance\"\r\n            },\r\n            {\r\n                \"id\": \"3B3QpKvXD3\",\r\n                \"name\": \"Sci-Fi\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/3B3QpKvXD3/scifi\"\r\n            },\r\n            {\r\n                \"id\": \"WCMkyAqVlf\",\r\n                \"name\": \"Semi-Cooperative\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/WCMkyAqVlf/semicooperative\"\r\n            },\r\n            {\r\n                \"id\": \"VzyslQJGrG\",\r\n                \"name\": \"Solo / Solitaire\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/VzyslQJGrG/solo--solitaire\"\r\n            },\r\n            {\r\n                \"id\": \"0MdRqhkNpw\",\r\n                \"name\": \"Space Exploration\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/0MdRqhkNpw/space-exploration\"\r\n            },\r\n            {\r\n                \"id\": \"Hc6vcim5DS\",\r\n                \"name\": \"Spies/Secret Agents\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/Hc6vcim5DS/spiessecret-agents\"\r\n            },\r\n            {\r\n                \"id\": \"hShsL2DktG\",\r\n                \"name\": \"Sports\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/hShsL2DktG/sports\"\r\n            },\r\n            {\r\n                \"id\": \"4hZlqoitAY\",\r\n                \"name\": \"Steampunk\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/4hZlqoitAY/steampunk\"\r\n            },\r\n            {\r\n                \"id\": \"buDTYyPw4D\",\r\n                \"name\": \"Territory Building\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/buDTYyPw4D/territory-building\"\r\n            },\r\n            {\r\n                \"id\": \"XN9Byxf3MK\",\r\n                \"name\": \"Theme Park\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/XN9Byxf3MK/theme-park\"\r\n            },\r\n            {\r\n                \"id\": \"2KVQJ2k60k\",\r\n                \"name\": \"Time Travel\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/2KVQJ2k60k/time-travel\"\r\n            },\r\n            {\r\n                \"id\": \"JwHcKqxh33\",\r\n                \"name\": \"Trains\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/JwHcKqxh33/trains\"\r\n            },\r\n            {\r\n                \"id\": \"CWYOF9xu7O\",\r\n                \"name\": \"Transportation\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/CWYOF9xu7O/transportation\"\r\n            },\r\n            {\r\n                \"id\": \"TR4CiP8Huj\",\r\n                \"name\": \"Travel\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/TR4CiP8Huj/travel\"\r\n            },\r\n            {\r\n                \"id\": \"YGHGDjahKY\",\r\n                \"name\": \"Trivia\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/YGHGDjahKY/trivia\"\r\n            },\r\n            {\r\n                \"id\": \"djokexoK0U\",\r\n                \"name\": \"Video Game Theme\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/djokexoK0U/video-game-theme\"\r\n            },\r\n            {\r\n                \"id\": \"jS8aA9kDFW\",\r\n                \"name\": \"Vietnam War\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/jS8aA9kDFW/vietnam-war\"\r\n            },\r\n            {\r\n                \"id\": \"jX8asGGR6o\",\r\n                \"name\": \"Wargame\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/jX8asGGR6o/wargame\"\r\n            },\r\n            {\r\n                \"id\": \"uJgSEPT6zE\",\r\n                \"name\": \"Werewolves\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/uJgSEPT6zE/werewolves\"\r\n            },\r\n            {\r\n                \"id\": \"rHvAx4hH2f\",\r\n                \"name\": \"Word Game\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/rHvAx4hH2f/word-game\"\r\n            },\r\n            {\r\n                \"id\": \"wTLJSVEbm6\",\r\n                \"name\": \"World War I\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/wTLJSVEbm6/world-war-i\"\r\n            },\r\n            {\r\n                \"id\": \"fl3TogdUzX\",\r\n                \"name\": \"World War II\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/fl3TogdUzX/world-war-ii\"\r\n            },\r\n            {\r\n                \"id\": \"OlkGBmu4Va\",\r\n                \"name\": \"World War III\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/OlkGBmu4Va/world-war-iii\"\r\n            },\r\n            {\r\n                \"id\": \"FmGV9rVu1c\",\r\n                \"name\": \"Zombies\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/FmGV9rVu1c/zombies\"\r\n            },\r\n            {\r\n                \"id\": \"B1N2QOByCl\",\r\n                \"name\": \"Zone Control\",\r\n                \"url\": \"https://www.boardgameatlas.com/category/B1N2QOByCl/zone-control\"\r\n            }\r\n        ]\r\nexport default categoriesSelect;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './RandomPage.css';\r\nimport { Spring } from 'react-spring/renderprops'\r\n\r\nconst RandomPage = (props) => {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n\r\n    async function randomGame(search, error) {\r\n        const key = \"CdoIKzHYo3\"\r\n        const url = `https://api.boardgameatlas.com/api/search?client_id=CdoIKzHYo3&random=true&limit=1`;\r\n        try {\r\n            setError(\"\");\r\n            let response = await fetch(url);            //Uses fetch method on the url provided and assigns to \"response\"\r\n            let json = await response.json();           //Fetch \"response\" is converted to json format using json() method\r\n            let resGames = json.games[0].image_url;\r\n            setSearch(resGames);\r\n        } catch (e) {\r\n            setError(\"There was an error\");\r\n            setSearch([]);\r\n        }\r\n    }\r\n    useEffect(() => randomGame(), []);\r\n\r\n    return (\r\n        <div className=\"randomContainer textCenter\">\r\n            <h2 className=\"marginBtm0\">Not sure what to search for?</h2>\r\n            <p className=\"marginTop0\">(Click image for a random suggestion)</p>\r\n            <Spring\r\n                from={{ opacity: 0 }}\r\n                to={{ opacity: 1 }}\r\n                config={{ delay: 1000, duration: 2000 }}>\r\n                {props => (\r\n                    <div style={props}>\r\n                        <img className=\"imgSize\"\r\n                            onClick={() => randomGame()}\r\n                            src={search} />\r\n                    </div>\r\n                )}\r\n            </Spring>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RandomPage;\r\n\r\n//ORIGINAL PRE SPRING\r\n// return (\r\n//     <div className=\"randomContainer textCenter\">\r\n//         <h2 className=\"marginBtm0\">Not sure what to search for?</h2>\r\n//         <p className=\"marginTop0\">(Click for another random suggestion...)</p>\r\n//         <img className=\"imgSize\"\r\n//             onClick={() => randomGame()}\r\n//             src={search} />\r\n//     </div>\r\n\r\n// );","import React, { useState, useMemo } from \"react\";\r\nimport GamesPage from '../Games/GamesPage';                     //Search results will be displayed on GamesPage\r\nimport { setSearch } from '../../redux/actions/SearchActions';\r\nimport { addFavorite, deleteFavorite } from '../../redux/actions/UserGamesActions';\r\nimport { connect } from \"react-redux\";\r\nimport './SearchPage.css';\r\nimport categoriesSelect from '../shared/categories'\r\nimport RandomPage from '../Random/RandomPage';\r\n  \r\n\r\nconst SearchPage = (props) => {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [categories, setCategories] = useState(\"\");\r\n    const [minPlayer, setMinPlayer] = useState(\"\");\r\n    const [maxMsrp, setMaxMsrp] = useState(\"\");\r\n    const [limit, setLimit] = useState(25);\r\n    const [orderBy, setOrderBy] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const favIds = useMemo(() => {                    //EX: const memoizedValue = useMemo(() => computeExpensiveValue(a, b), [a, b]);\r\n        return props.favorites.map((games) => games.id);\r\n    }, [props.favorites]);\r\n\r\n    async function getGames(search, categories, minPlayer, maxMsrp, limit, orderBy, error) {\r\n        const key = \"CdoIKzHYo3\"\r\n        const url = `https://api.boardgameatlas.com/api/search?name=${search}&client_id=${key}&categories=${categories}&gt_min_players=${minPlayer}&lt_msrp=${maxMsrp}&limit=${limit}&order_by=${orderBy}`;\r\n        try {\r\n            setError(\"\");\r\n            let response = await fetch(url);            //Uses fetch method on the url provided and assigns to \"response\"\r\n            let json = await response.json();           //Fetch \"response\" is converted to json format using json() method\r\n            let resGames = json.games.map((val) => {     //json data has the values mapped to \"resGames\" variable\r\n                return { id: val.id, name: val.name, image: val.image_url, desciption: val.description_preview };\r\n            });\r\n            props.setSearch(resGames);                  //updating state for the return that resGames has\r\n        } catch (e) {\r\n            setError(\"There was an error\");\r\n            props.setSearch([]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <RandomPage />\r\n        <form className=\"searchContainer\">\r\n            <p className=\"marginTop0 bold textCenter\">Search from over 20,000 board games!</p>\r\n            <div className=\"searchDiv\">\r\n                <label htmlFor=\"title\">Title: </label>\r\n                <input\r\n                    name=\"title\"\r\n                    id=\"title\"\r\n                    onChange={((e) => setSearch(e.target.value))}\r\n                    value={search}>\r\n                </input>\r\n            </div>\r\n\r\n            <div className=\"searchDiv\">\r\n                <label htmlFor=\"dropCategories\">Category: </label>\r\n                <select\r\n                    name=\"dropCategories\"\r\n                    id=\"dropCategories\"\r\n                    value={categories}\r\n                    // value={categoriesSelect.id}\r\n                    onChange={(e) => setCategories(e.target.value)}>\r\n                        <option></option>\r\n                    {categoriesSelect.map((categoriesSelect) => {\r\n                        return <option \r\n                            key={categoriesSelect.id}\r\n                            value={categoriesSelect.id}>{categoriesSelect.name}</option>;\r\n                    })}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"searchDiv\">\r\n                <label htmlFor=\"minPlayers\" >Minimum Players: </label>\r\n                <select\r\n                    name=\"minPlayers\"\r\n                    id=\"minPlayers\"\r\n                    onChange={((e) => setMinPlayer(e.target.value))}\r\n                    value={minPlayer}>\r\n                    <option></option>\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4</option>\r\n                    <option>5</option>\r\n                    <option>6</option>\r\n                    <option>7</option>\r\n                    <option>8</option>\r\n                    <option>9</option>\r\n                    <option>10</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"searchDiv\">\r\n                <label htmlFor=\"maxMsrp\">Maximum Price: </label>\r\n                <select\r\n                    name=\"maxMsrp\"\r\n                    id=\"maxMsrp\"\r\n                    onChange={((e) => setMaxMsrp(e.target.value))}\r\n                    value={maxMsrp}>\r\n                        <option></option>\r\n                        <option>10.00</option>\r\n                        <option>25.00</option>\r\n                        <option>50.00</option>\r\n                        <option>100.00</option>\r\n                        <option>150.00</option>\r\n                        <option>250.00</option>\r\n                    </select>\r\n            </div>\r\n\r\n            <div className=\"searchDiv\">\r\n                <label htmlFor=\"limit\">Number of Results: </label>\r\n                <select \r\n                name=\"limit\" \r\n                id=\"limit\"\r\n                onChange={((e) => setLimit(e.target.value))}\r\n                value={limit}>\r\n                    <option>10</option>\r\n                    <option>25</option>\r\n                    <option>50</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"searchDiv\">\r\n                <label htmlFor=\"sortBy\">Sort Options</label>\r\n                <select \r\n                name=\"sortBy\" \r\n                id=\"sortBy\"\r\n                onChange={((e) => setOrderBy(e.target.value))}\r\n                value={orderBy}>\r\n                    <option>Popularity</option>\r\n                    <option>Name</option>\r\n                    <option>Price</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"textCenter\">\r\n                <button\r\n                    onClick={(e) => {e.preventDefault()\r\n                        getGames(search, categories, minPlayer, maxMsrp, limit, orderBy, error)}}>\r\n                    Submit</button>\r\n                    <div className=\"gamesDispContainer\" id=\"gamesDispContainer\">\r\n                        {error.length > 0 && <h1>{error}</h1>}\r\n                        {error.length === 0 && props.games.length > 0 && props.games.map((val) => \r\n                        <GamesPage\r\n                        key={val.id}\r\n                        games={val}\r\n                        isFavorite={favIds.includes(val.id)}\r\n                        deleteFavorite={props.deleteFavorite}\r\n                        addFavorite={props.addFavorite}/>\r\n                        )}\r\n                    </div>\r\n            </div>\r\n        </form >\r\n        </>\r\n    );\r\n}\r\n\r\n//Search Button e.preventDefault() needed because it's inside a form\r\n\r\n//mapDispatchToProps the piece of state that you need\r\n//dispatch is telling it what actions you want to access\r\n//ability to trigger those actions\r\nconst mapDispatchToProps = {\r\n    setSearch,\r\n    addFavorite,\r\n    deleteFavorite,\r\n};\r\n\r\n//mapStateToProps takes state and attaches them to props for keys defined.\r\n//IMPORTANT THAT YOU ONLY GIVE IT ACCESS THAT YOU NEED SO IT DOESN'T RERENDER ANYTIME AN UNNECESSARY ONE CHANGES\r\nfunction mapStateToProps(state) {       //passing global state into the props in the component\r\n    return {                            //function is telling it to pay attention to these states\r\n        username: state.user.username,  //returns object with keys pointing\r\n        games: state.search,\r\n        favorites: state.favorites,     //favorites is what we called the key in the index\r\n    };\r\n}\r\n\r\n//CONNECT mapStatetoProps (pieces of state it has action to) & mapDispatchtoProps (actions it has access to)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);\r\n//connect is from react Redux (imported above)","export const stateSelect = [\r\n    {\r\n        \"name\": \"Alabama\",\r\n        \"abbreviation\": \"AL\"\r\n    },\r\n    {\r\n        \"name\": \"Alaska\",\r\n        \"abbreviation\": \"AK\"\r\n    },\r\n    {\r\n        \"name\": \"Arizona\",\r\n        \"abbreviation\": \"AZ\"\r\n    },\r\n    {\r\n        \"name\": \"Arkansas\",\r\n        \"abbreviation\": \"AR\"\r\n    },\r\n    {\r\n        \"name\": \"California\",\r\n        \"abbreviation\": \"CA\"\r\n    },\r\n    {\r\n        \"name\": \"Colorado\",\r\n        \"abbreviation\": \"CO\"\r\n    },\r\n    {\r\n        \"name\": \"Connecticut\",\r\n        \"abbreviation\": \"CT\"\r\n    },\r\n    {\r\n        \"name\": \"Delaware\",\r\n        \"abbreviation\": \"DE\"\r\n    },\r\n    {\r\n        \"name\": \"District Of Columbia\",\r\n        \"abbreviation\": \"DC\"\r\n    },\r\n    {\r\n        \"name\": \"Florida\",\r\n        \"abbreviation\": \"FL\"\r\n    },\r\n    {\r\n        \"name\": \"Georgia\",\r\n        \"abbreviation\": \"GA\"\r\n    },\r\n    {\r\n        \"name\": \"Guam\",\r\n        \"abbreviation\": \"GU\"\r\n    },\r\n    {\r\n        \"name\": \"Hawaii\",\r\n        \"abbreviation\": \"HI\"\r\n    },\r\n    {\r\n        \"name\": \"Idaho\",\r\n        \"abbreviation\": \"ID\"\r\n    },\r\n    {\r\n        \"name\": \"Illinois\",\r\n        \"abbreviation\": \"IL\"\r\n    },\r\n    {\r\n        \"name\": \"Indiana\",\r\n        \"abbreviation\": \"IN\"\r\n    },\r\n    {\r\n        \"name\": \"Iowa\",\r\n        \"abbreviation\": \"IA\"\r\n    },\r\n    {\r\n        \"name\": \"Kansas\",\r\n        \"abbreviation\": \"KS\"\r\n    },\r\n    {\r\n        \"name\": \"Kentucky\",\r\n        \"abbreviation\": \"KY\"\r\n    },\r\n    {\r\n        \"name\": \"Louisiana\",\r\n        \"abbreviation\": \"LA\"\r\n    },\r\n    {\r\n        \"name\": \"Maine\",\r\n        \"abbreviation\": \"ME\"\r\n    },\r\n    {\r\n        \"name\": \"Maryland\",\r\n        \"abbreviation\": \"MD\"\r\n    },\r\n    {\r\n        \"name\": \"Massachusetts\",\r\n        \"abbreviation\": \"MA\"\r\n    },\r\n    {\r\n        \"name\": \"Michigan\",\r\n        \"abbreviation\": \"MI\"\r\n    },\r\n    {\r\n        \"name\": \"Minnesota\",\r\n        \"abbreviation\": \"MN\"\r\n    },\r\n    {\r\n        \"name\": \"Mississippi\",\r\n        \"abbreviation\": \"MS\"\r\n    },\r\n    {\r\n        \"name\": \"Missouri\",\r\n        \"abbreviation\": \"MO\"\r\n    },\r\n    {\r\n        \"name\": \"Montana\",\r\n        \"abbreviation\": \"MT\"\r\n    },\r\n    {\r\n        \"name\": \"Nebraska\",\r\n        \"abbreviation\": \"NE\"\r\n    },\r\n    {\r\n        \"name\": \"Nevada\",\r\n        \"abbreviation\": \"NV\"\r\n    },\r\n    {\r\n        \"name\": \"New Hampshire\",\r\n        \"abbreviation\": \"NH\"\r\n    },\r\n    {\r\n        \"name\": \"New Jersey\",\r\n        \"abbreviation\": \"NJ\"\r\n    },\r\n    {\r\n        \"name\": \"New Mexico\",\r\n        \"abbreviation\": \"NM\"\r\n    },\r\n    {\r\n        \"name\": \"New York\",\r\n        \"abbreviation\": \"NY\"\r\n    },\r\n    {\r\n        \"name\": \"North Carolina\",\r\n        \"abbreviation\": \"NC\"\r\n    },\r\n    {\r\n        \"name\": \"North Dakota\",\r\n        \"abbreviation\": \"ND\"\r\n    },\r\n    {\r\n        \"name\": \"Ohio\",\r\n        \"abbreviation\": \"OH\"\r\n    },\r\n    {\r\n        \"name\": \"Oklahoma\",\r\n        \"abbreviation\": \"OK\"\r\n    },\r\n    {\r\n        \"name\": \"Oregon\",\r\n        \"abbreviation\": \"OR\"\r\n    },\r\n    {\r\n        \"name\": \"Palau\",\r\n        \"abbreviation\": \"PW\"\r\n    },\r\n    {\r\n        \"name\": \"Pennsylvania\",\r\n        \"abbreviation\": \"PA\"\r\n    },\r\n    {\r\n        \"name\": \"Rhode Island\",\r\n        \"abbreviation\": \"RI\"\r\n    },\r\n    {\r\n        \"name\": \"South Carolina\",\r\n        \"abbreviation\": \"SC\"\r\n    },\r\n    {\r\n        \"name\": \"South Dakota\",\r\n        \"abbreviation\": \"SD\"\r\n    },\r\n    {\r\n        \"name\": \"Tennessee\",\r\n        \"abbreviation\": \"TN\"\r\n    },\r\n    {\r\n        \"name\": \"Texas\",\r\n        \"abbreviation\": \"TX\"\r\n    },\r\n    {\r\n        \"name\": \"Utah\",\r\n        \"abbreviation\": \"UT\"\r\n    },\r\n    {\r\n        \"name\": \"Vermont\",\r\n        \"abbreviation\": \"VT\"\r\n    },\r\n    {\r\n        \"name\": \"Virgin Islands\",\r\n        \"abbreviation\": \"VI\"\r\n    },\r\n    {\r\n        \"name\": \"Virginia\",\r\n        \"abbreviation\": \"VA\"\r\n    },\r\n    {\r\n        \"name\": \"Washington\",\r\n        \"abbreviation\": \"WA\"\r\n    },\r\n    {\r\n        \"name\": \"West Virginia\",\r\n        \"abbreviation\": \"WV\"\r\n    },\r\n    {\r\n        \"name\": \"Wisconsin\",\r\n        \"abbreviation\": \"WI\"\r\n    },\r\n    {\r\n        \"name\": \"Wyoming\",\r\n        \"abbreviation\": \"WY\"\r\n    }\r\n]\r\nexport default stateSelect;","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./SignupPage.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport stateSelect from '../shared/states'\r\n\r\n\r\nconst SignupPage = (props) => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [firstname, setFirstname] = useState(\"\");\r\n    const [lastname, setLastname] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [state, setState] = useState(\"\");\r\n    const [visible, setVisible] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const history = useHistory();                    //useHistory to push user to the search page\r\n\r\n    async function signup() {                 \r\n        // Separated out errors to give more specific feedback to the user.\r\n        if (username.length < 8 || username.length > 20 || password.length < 8 || password.length > 20) {\r\n            toast.warning(\"Username and password must be between 8 and 20 characters.\")\r\n        }\r\n        if (firstname.length < 2 || firstname.length > 20 || lastname.length < 2 || lastname.length > 20) {\r\n            toast.warning(\"First and last name must be between 2 and 20 characters.\")\r\n        }\r\n        if (firstname.length < 2 || firstname.length > 20 || lastname.length < 2 || lastname.length > 20) {\r\n            toast.warning(\"First and last name must be between 2 and 20 characters.\")\r\n        }\r\n        if (city.length < 2 || city.length > 20) {\r\n            toast.warning(\"City must be between 2 and 20 characters.\")\r\n        }\r\n        if (state.length === 0) {\r\n            toast.warning(\"Please choose your state from the drop down list.\")\r\n        }\r\n        if (visible.length === 0) {\r\n            toast.warning(\"Please choose the visibility of your profile for other users.\")\r\n        }\r\n        try {\r\n            // Try to do the fetch to the appropriate endpoint\r\n            // Post username and password in a body\r\n            const response = await fetch(\"/users/login\", {\r\n                method: 'POST',\r\n                // Headers tells it what kind of information to expect\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                // Has trouble with objects so it need to be converted to a string\r\n                body: JSON.stringify({username: username, password: password}),\r\n            });\r\n            // Check the response\r\n            const json = await response.json();\r\n            // Handle response correctly\r\n            if (json.error){\r\n                setError(json.error);\r\n            }\r\n            else {props.setUser(json.data.username);\r\n            history.push(\"/search\");\r\n            }\r\n        } catch (err) {\r\n            setError(\"Something went wrong, please try again later.\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"signupContainer\">\r\n                <h2 className=\"textCenter\">Signup for an account</h2>\r\n                <ul className=\"rightMargin1\">\r\n                    <li>Search a database of 20,000+ board games</li>\r\n                    <li>Store your board game collection</li>\r\n                    <li>See the board game collection of other users</li>\r\n                    <li>Find players in your area interested in the same games (coming soon...)</li>\r\n                    <li>Message players to organize a game night (coming soon...)</li>\r\n                </ul>\r\n                <div className=\"signupDiv\">\r\n                    <label className=\"flexLabel\" htmlFor=\"username\">User Name: </label>\r\n                    <input\r\n                        className=\"flexTextBox\"\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        value={username} />\r\n                </div>\r\n                <div className=\"signupDiv\">\r\n                    <label className=\"flexLabel\" htmlFor=\"password\">Password: </label>\r\n                    <input\r\n                        className=\"flexTextBox\"\r\n                        type=\"text\"\r\n                        id=\"password\"\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        value={password} />\r\n                </div>\r\n                <div className=\"signupDiv\">\r\n                    <label className=\"flexLabel\" htmlFor=\"firstname\">First Name: </label>\r\n                    <input\r\n                        className=\"flexTextBox\"\r\n                        type=\"text\"\r\n                        id=\"firstname\"\r\n                        onChange={(e) => setFirstname(e.target.value)}\r\n                        value={firstname} />\r\n                </div>\r\n                <div className=\"signupDiv\">\r\n                    <label className=\"flexLabel\" htmlFor=\"lastname\">Last Name: </label>\r\n                    <input\r\n                        className=\"flexTextBox\"\r\n                        type=\"text\"\r\n                        id=\"lastname\"\r\n                        onChange={(e) => setLastname(e.target.value)}\r\n                        value={lastname} />\r\n                </div>\r\n                <div className=\"signupDiv\">\r\n                    <label className=\"flexLabel\" htmlFor=\"city\">City: </label>\r\n                    <input\r\n                        className=\"flexTextBox\"\r\n                        type=\"text\"\r\n                        id=\"city\"\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                        value={city} />\r\n                </div>\r\n                <div className=\"signupDiv\">\r\n                    <label className=\"flexLabel\" htmlFor=\"state\">State: </label>\r\n                    <select\r\n                        className=\"flexTextBox\"\r\n                        name=\"dropState\"\r\n                        id=\"dropState\"\r\n                        value={state}\r\n                        onChange={(e) => setState(e.target.value)}>\r\n                        <option></option>\r\n                        {stateSelect.map((stateSelect) => {\r\n                            return <option\r\n                                key={stateSelect.abbreviation}\r\n                                value={stateSelect.abbreviation}>{stateSelect.name}</option>;\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <div className=\"borderBlue1 textCenter\">\r\n                    <label htmlFor=\"dropVisibility\">Profile Visibility</label>\r\n                    <select\r\n                        name=\"dropVisibility\"\r\n                        id=\"dropVisibility\"\r\n                        value={visible}\r\n                        onChange={(e) => setVisible(e.target.value)} >\r\n                        <option> </option>\r\n                        <option value={true}>Yes, others can see my games</option>\r\n                        <option value={false}>No, don't allow others to see my games</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"textRight\">\r\n                    <button onClick={() => signup()}>Sign Up</button>\r\n                    <ToastContainer />\r\n                </div>\r\n\r\n                <div className=\"textCenter\">\r\n                    <p>Already registered? <a href=\"/login\">Login</a></p>\r\n                </div>\r\n\r\n            </section>\r\n        </>\r\n    )\r\n\r\n}\r\nexport default SignupPage;","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";      //useHistory to push them to the search page\r\nimport \"./LoginPage.css\";\r\nimport RandomPage from '../Random/RandomPage';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst LoginPage = (props) => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const history = useHistory();                    //useHistory to push user to the search page\r\n\r\n    async function login() {                        //Don't pass (username, password) because it just looks for them in local scope instead of global\r\n        if (username.length < 8 || username.length > 20 || password.length < 8 || password.length > 20) {\r\n            toast.warning(\"Username and Password must be between 8 and 20 characters.\")\r\n        }\r\n        try {\r\n            // Try to do the fetch to the appropriate endpoint\r\n            // Post username and password in a body\r\n            const response = await fetch(\"/users/login\", {\r\n                method: 'POST',\r\n                // Headers tells it what kind of information to expect\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                // Has trouble with objects so it need to be converted to a string\r\n                body: JSON.stringify({username: username, password: password}),\r\n            });\r\n            // Check the response\r\n            const json = await response.json();\r\n            // Handle response correctly\r\n            if (json.error){\r\n                setError(json.error);\r\n            }\r\n            else {props.setUser(json.data.username);\r\n            history.push(\"/search\");\r\n            }\r\n        } catch (err) {\r\n            setError(\"Something went wrong, please try again later.\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"loginContainer\">\r\n                <h2 className=\"textCenter\">Login to your account to:</h2>\r\n                <ul className=\"rightMargin1\">\r\n                    <li>Search a database of 20,000+ board games</li>\r\n                    <li>Store your board game collection</li>\r\n                    <li>See the board game collection of other users</li>\r\n                    <li>Find players in your area interested in the same games (coming soon...)</li>\r\n                    <li>Message players to organize a game night (coming soon...)</li>\r\n                </ul>\r\n                <div className=\"loginDiv\">\r\n                    <label className=\"flexLabel textRight\" htmlFor=\"username\">User Name: </label>\r\n                    <input\r\n                        className=\"flexTextBox\"\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        onChange={(e) => setUsername(e.target.value)}\r\n                        value={username} />\r\n                </div>\r\n                <div className=\"loginDiv\">\r\n                    <label className=\"flexLabel textRight\" htmlFor=\"password\">Password: </label>\r\n                    <input\r\n                        className=\"flexTextBox\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        value={password} />\r\n                </div>\r\n                <div className=\"textRight\">\r\n                    <button onClick={() => login()}>Submit</button>\r\n\r\n                    <ToastContainer />\r\n\r\n                </div>\r\n                <div className=\"textCenter\">\r\n                    <p>Not registered? <a href=\"/signup\">Sign Up</a></p>\r\n                </div>\r\n            </section>\r\n            <RandomPage />\r\n        </>\r\n    )\r\n\r\n}\r\nexport default LoginPage;","/////////////////////////////////////////////////////////////////////////////\r\n// ACTIONS ARE THE MESSENGER                                               //\r\n// HERE'S WHAT YOU NEED TO DO AND HERE'S THE INFORMATION YOU NEED TO DO IT //\r\n/////////////////////////////////////////////////////////////////////////////\r\n\r\n// What actions do I need for my users?\r\n    // Login (export it)\r\n    // Logout (export it)\r\n    export const SET_USER = \"Set User\";\r\n    export const CLEAR_USER = \"Clear User\";\r\n    \r\n    // Build action creators functions\r\n        // Need to know the user to log-in so it's passed\r\n        // Functions are used in the components\r\n    export function setUser(user){\r\n        return {type: SET_USER, username: user};\r\n    }\r\n    \r\n    // Build action creators functions\r\n        // Don't need to know any additional info to detele it, just delete the current one\r\n        // Just clearing out the default state and then the reducer handles it\r\n        // Functions are used in the components\r\n    export function clearUser(){\r\n        return {type: CLEAR_USER};\r\n    }","import React, {useState} from 'react';\r\nimport { deleteFavorite } from '../../redux/actions';\r\nimport { connect } from 'react-redux';\r\nimport './UserGames.css';\r\nimport GamesPage from \"../Games/GamesPage\";\r\nimport RandomPage from '../Random/RandomPage';\r\n\r\nconst UserGames = (props) => {\r\nreturn (\r\n    <>\r\n    <RandomPage />\r\n    <div className=\"favsContainer\">\r\n    <h2 className=\"textCenter marginTop0\">Favorited games</h2>\r\n      {props.favorites.map((v) => (\r\n          <GamesPage key={v.id} games={v} isFavorite={true} deleteFavorite={props.deleteFavorite} />\r\n        ))}\r\n      </div>\r\n    </>\r\n)}\r\n//favorites states\r\n//delete favorites\r\nconst mapDispatchToProps = {            //telling dispatch what actions you want to access\r\n    deleteFavorite,\r\n  };\r\n   \r\n  function mapStateToProps(state) {\r\n    return {\r\n      favorites: state.favorites,\r\n    };\r\n  }\r\n// export default UserGames;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserGames);","//////////////\r\n// SELECTOR //\r\n//////////////\r\n// A function that accepts Redux state as an argument and returns data that is derived from that state.\r\n\r\nexport const userSelector = (state) => state.user;\r\nexport const usernameSelector = (state) => state.user.username;\r\nexport const userIdSelector = (state) => state.user.id;\r\nexport const userRoleSelector = (state) => state.user.role;","import React, { useEffect } from 'react';\nimport { Switch, Route, BrowserRouter as Router, Redirect, NavLink } from 'react-router-dom';\nimport SearchPage from './Components/Search/SearchPage';\nimport SignupPage from './Components/Signup/SignupPage';\nimport LoginPage from './Components/Login/LoginPage';\nimport './App.css';\nimport UserGames from './Components/UserGames/UserGames.';\n\n// import to show when people are logged in and show nav components based on that\nimport { useSelectors, useActionCreators } from \"use-redux\";\nimport { usernameSelector } from \"./redux/selectors\";\nimport { clearUser, setUser } from \"./redux/actions\";\n\nimport axios from \"axios\";\n\n// import scrolltop from '/shared/scrolltop'\n\n\n// Creating function so that Boardgame_App sees that we're signed in and then will display based on that user.\nfunction App() {\n  // Take the username out of state and set it to username\n  const [username] = useSelectors(usernameSelector);\n  const [clearUserFromState, setUserInState] = useActionCreators(clearUser, setUser);\n\n  // UseEffect to get this to run one time and talks to userRoutes in express where \"authenticate\" is\n  // Make a request to the server to see if the cookie is there to know they are signed in\n  // Put that into global state to show user things they should see\n  useEffect(async () => {\n    try {\n      // Axios returns all of the data and returns a data key with the actual data coming back. (instead of fetch)\n      // Authenticate is in Express under users.routes\n      const json = await axios.get(\"/users/authenticate\");\n      console.log(json);\n      if (json.data.success){\n        setUserInState(json.data.data.username)  //not the actual login page. just set to global state\n      }\n    } catch(err) {}\n  }, []);\n\n\n  return (\n      <Router>\n        <>\n        <header>\n          <h1 className=\"textCenter\">Board Game Connection</h1>\n        </header>\n        <nav className=\"navContainer\">\n          <NavLink to='/login' className=\"navLink\">Login</NavLink>\n          <NavLink to='/search' className=\"navLink\">Search</NavLink>\n          <NavLink to='/usergames' className=\"navLink\">My Games</NavLink>\n        </nav>\n        <main>\n          <Switch>\n            <Route exact path='/login' component={LoginPage} />\n            <Route exact path='/search' component={SearchPage} />\n            <Route exact path='/signup' component={SignupPage} />\n            <Route exact path='/usergames' component={UserGames} />\n            <Route path=\"*\">\n              <Redirect to='/login' />\n            </Route>\n          </Switch>\n        </main>\n        <footer className=\"textCenter\">\n        </footer>\n        </>\n      </Router>\n  );\n}\n\nexport default App;","/////////////////////////////////////////////////////////////////////////////\r\n// REDUCERS TAKE AN ACTIONS AND THEN CHANGE STATE BASED ON DATA OR NO DATA //\r\n/////////////////////////////////////////////////////////////////////////////\r\n\r\n// Import the constants from Actions (LoginActions)\r\nimport {SET_USER, CLEAR_USER} from \"../actions\";\r\n\r\n// Create a function that takes state and action (always named this)\r\n// Run once on start-up with no action so we need to provide a default\r\nconst initialState = {\r\n    username: \"\",\r\n};\r\n\r\n// Create a function that takes state and action (always named this)\r\nexport default function loginReducer(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_USER:\r\n            return {...state, username: action.username};\r\n        case CLEAR_USER:\r\n            return {...initialState};\r\n        default:\r\n            return state;\r\n    }    \r\n}","/////////////////////////////////////////////////////////////////////////////\r\n// REDUCERS TAKE AN ACTIONS AND THEN CHANGE STATE BASED ON DATA OR NO DATA //\r\n/////////////////////////////////////////////////////////////////////////////\r\n\r\n// Import the constants from Actions QueryActions\r\nimport {SET_SEARCH} from \"../actions\";\r\n\r\n// Create a function that takes state and action (always named this)\r\n// Run once on start-up with no action so we need to provide a default\r\nconst initialState = [];\r\nexport default function searchReducer (state = initialState, action){\r\n    switch(action.type){\r\n        case SET_SEARCH:\r\n            return [...action.search]\r\n        default:\r\n            return state;\r\n    }\r\n}","/////////////////////////////////////////////////////////////////////////////\r\n// REDUCERS TAKE AN ACTIONS AND THEN CHANGE STATE BASED ON DATA OR NO DATA //\r\n/////////////////////////////////////////////////////////////////////////////\r\n\r\nimport {ADD_FAVORITE, DETLETE_FAVORITE} from \"../actions\";\r\n\r\n// Create a function that takes state and action (always named this)\r\n// Run once on start-up with no action so we need to provide a default\r\nconst initialState = [];\r\nexport default function userGamesReducer(state = initialState, action){\r\n    switch (action.type){\r\n        case ADD_FAVORITE:\r\n            return [...state, action.favorite];\r\n        case DETLETE_FAVORITE:\r\n            return state.filter(val => val.id !== action.id);   //.filter tests each array element\r\n        default: \r\n            return state;\r\n    }\r\n}","////////////////////////////////////////////////////////\r\n// INDEX GETS ALL REDUCER FILES TOGETHER IN ONE PLACE //\r\n// Like a hub to export out everything at once        //\r\n////////////////////////////////////////////////////////\r\n\r\n//Import the reducers into the index\r\n// import LocalReducer from \"./LocalReducer\";\r\nimport LoginReducer from \"./LoginReducer\";\r\nimport SearchReducer from \"./SearchReducer\";\r\nimport UserGamesReducer from \"./UserGamesReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\n\r\n//Create a global state version\r\n//This is where we combine everything \r\n    //Defines how we want to refer to it in state (ex: query:)and how we want to use it (queryReducer)\r\nconst rootReducer = combineReducers({\r\n    search: SearchReducer,\r\n    user: LoginReducer,\r\n    favorites: UserGamesReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","//import reducers that house all of the information\r\nimport rootReducer from \"./reducers\";\r\n//import create store comes up automatically when you export the createStore below\r\nimport { createStore } from \"redux\";\r\n\r\nexport default createStore(rootReducer);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport Store from './redux/Store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}